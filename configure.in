dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/hotkeys.c)
AC_CONFIG_AUX_DIR(config)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(hotkeys, 0.5)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

AC_ARG_WITH(xml-prefix,
    [  --with-xml-prefix=PFX   Prefix where GNOME XML library is installed],
    xml_config_prefix="$withval", xml_config_prefix="")

AC_ARG_WITH(xml-exec-prefix,
    [  --with-xml-exec-prefix=PFX Exec prefix where GNOME XML library is installed],
    xml_config_exec_prefix="$withval", xml_config_exec_prefix="")

AC_ARG_ENABLE(xmltest,
    [  --disable-xmltest       Do not try to compile and run a test XML program],
    , enable_xmltest=yes)

AC_ARG_ENABLE(xosd,
    [  --disable-xosd          Don't use XOSD library],
    ,enable_xosd=yes)

AC_ARG_WITH(xosd-inc,
    [  --with-xosd-inc=DIR     Set the include directory of XOSD],
    xosd_incdir="$withval", xosd_incdir="")

AC_ARG_WITH(xosd-lib,
    [  --with-xosd-lib=DIR     Set the library directory of XOSD],
    xosd_libdir="$withval", xosd_libdir="")

AC_ARG_WITH(db2-inc,
    [  --with-db2-inc=DIR      Set the include directory of Berkeley DB2],
    db2_incdir="$withval", db2_incdir="")
 
AC_ARG_WITH(db2-lib,
    [  --with-db2-lib=DIR      Set the library directory of Berkeley DB2],
    db2_libdir="$withval", db2_libdir="")

dnl-----------------------------------------------------------------------
dnl Checks for LIBXML2
dnl-----------------------------------------------------------------------
if test "x$enable_xmltest" = "xyes"
then
    if test x$xml_config_exec_prefix != x
    then
        xml_config_args="$xml_config_args --exec-prefix=$xml_config_exec_prefix"
        if test x${XML_CONFIG+set} != xset
        then
            XML_CONFIG=$xml_config_exec_prefix/bin/xml-config
        fi
    fi
    if test x$xml_config_prefix != x
    then
        xml_config_args="$xml_config_args --prefix=$xml_config_prefix"
        if test x${XML_CONFIG+set} != xset
        then
            XML_CONFIG=$xml_config_prefix/bin/xml-config
        fi
    fi

    AC_PATH_PROG( XML_CONFIG, xml-config, no )
    if test "$XML_CONFIG" = "no"
    then
dnl    AC_CHECK_PROG( HAVE_XML_CONFIG, xml-config, "yes", "no" )
dnl    if test x$HAVE_XML_CONFIG = "xno" ; then
        AC_MSG_ERROR(xml-config not found. It's essential, please install it)
    else
        XML_CFLAGS=`$XML_CONFIG $xml_config_args --cflags`
        XML_LIBS=`$XML_CONFIG $xml_config_args --libs`
        AC_SUBST(XML_CFLAGS)
        AC_SUBST(XML_LIBS)
    fi
fi

dnl Checks for libraries.
dnl Replace `main' with a function in -lX11:
dnl AC_CHECK_LIB(X11, XNextEvent)
dnl Replace `main' with a function in -lXext:
dnl Replace `main' with a function in -lXfont:
dnl AC_CHECK_LIB(Xfont, main)
dnl Replace `main' with a function in -lxkbfile:
dnl AC_CHECK_LIB(xkbfile, main)
dnl Replace `main' with a function in -lxkbui:
dnl AC_CHECK_LIB(xkbui, main)
dnl Replace `main' with a function in -lxml:
AC_CHECK_LIB(xml, xmlParseFile)
dnl Replace `main' with a function in -lz:
dnl AC_CHECK_LIB(z, main)

dnl-----------------------------------------------------------------------
dnl Checks for XOSD
dnl-----------------------------------------------------------------------
if test ! x$xosd_libdir = x; then
    LIBS="$LIBS -L$xosd_libdir"
fi
if test ! x$xosd_incdir = x; then
    CPPFLAGS="$CPPFLAGS -I$xosd_incdir"
fi

if test "x$enable_xosd" = "xyes"
then
    AC_CHECK_LIB(xosd, xosd_init)
##    , [AC_DEFINE(HAVE_LIBXOSD),LIBS="$LIBS -lxosd",have_xosd=yes])
    if test "x$ac_cv_have_libxosd" != "xyes"
    then
        ## Although XOSD uses pthread, we must still link with -lpthread
        ## explicitly, otherwise strange things like "zombie thread"
        ## will occur when exec'ing, this is explained in this email:
        ## http://sources.redhat.com/ml/bug-glibc/2000-04/msg00023.html
        CFLAGS="$CFLAGS -D_REENTRANT"
        LIBS="$LIBS -lpthread"
    fi
fi

dnl-----------------------------------------------------------------------
dnl Checks for Berkeley DB2 libraries. (Mainly from libtabe)
dnl-----------------------------------------------------------------------
if test ! x$db2_libdir = x; then
    LIBS="$LIBS -L$db2_libdir"
fi
if test ! x$db2_incdir = x; then
    CPPFLAGS="$CPPFLAGS -I$db2_incdir"
fi

AC_CHECK_LIB(db2, db_open, ,
    [ AC_MSG_RESULT([You need Berkeley DB 2 to compile successfully.])
      AC_MSG_RESULT([Please use --with-db2-incdir and --with-db2-libdir to configure.])
      exit 1
    ])


dnl Checks for header files.
AC_PATH_XTRA
if test "x$no_x" = "xyes"
then
    AC_MSG_ERROR("You must have X installed")
else
    X_LIBS="$X_LIBS -lX11"
fi
dnl XEXT_LIBS=""
dnl AC_CHECK_LIB(Xext, XkbOpenDisplay, [XEXT_LIBS="-lext"], , XFLAGS)
dnl if test x$XEXT_LIBS = "x-lext"
dnl then
dnl      AC_DEFINE(HAVE_LIBX11)
dnl      AC_DEFINE(HAVE_LIBXext)
dnl else
dnl     AC_MSG_ERROR("Unable to find the Xext library.")
dnl fi

AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_MAJOR
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h sys/ioctl.h sys/time.h unistd.h string.h strings.h syslog.h sys/file.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_VPRINTF
AC_FUNC_CLOSEDIR_VOID
AC_CHECK_FUNCS(select strdup strerror getopt_long)

AC_OUTPUT(Makefile src/Makefile def/Makefile)
